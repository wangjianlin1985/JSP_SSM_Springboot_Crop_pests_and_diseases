<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.PestMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加虫害记录 -->
	<insert id="addPest" parameterType="pest">
		insert into t_pest(cropObj,pestName,pestPhoto,pestDesc,cureDesc,addTime) values 
		(#{cropObj.cropId},#{pestName},#{pestPhoto},#{pestDesc},#{cureDesc},#{addTime})
	</insert>

	<!-- 按照查询条件分页查询虫害记录 -->
	<select id="queryPest" resultMap="pestMap" >
		select t_pest.* from t_pest,t_crop ${where} and t_pest.cropObj = t_crop.cropId limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="pestMap" type="pest">
        <id property="pestId" column="pestId" />
        <association property="cropObj" column="cropObj" select="com.chengxusheji.mapper.CropMapper.getCrop" />
    </resultMap>

    <!-- 按照查询条件查询所有虫害记录 -->
	<select id="queryPestList" resultMap="pestMap" >
		select t_pest.* from t_pest,t_crop ${where} and t_pest.cropObj = t_crop.cropId
	</select>

    <!-- 按照查询条件的虫害记录数 -->
	<select id="queryPestCount" resultType="int">
		select count(*) from t_pest,t_crop ${where} and t_pest.cropObj = t_crop.cropId
	</select>

	<!-- 根据主键查询某个虫害记录 -->
	<select id="getPest" parameterType="int" resultMap="pestMap">
		select * from t_pest where t_pest.pestId = #{pestId}
	</select>

	<!-- 更新虫害记录 -->
	<update id="updatePest" parameterType="pest">
		update t_pest set cropObj=#{cropObj.cropId},pestName=#{pestName},pestPhoto=#{pestPhoto},pestDesc=#{pestDesc},cureDesc=#{cureDesc},addTime=#{addTime} where pestId = #{pestId}
	</update>

	<!-- 删除虫害记录 -->
	<delete id="deletePest" parameterType="int">
		delete from t_pest where pestId=#{pestId}
	</delete>

</mapper>
